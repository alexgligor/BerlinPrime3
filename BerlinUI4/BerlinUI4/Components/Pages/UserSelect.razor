@page "/userselect/{MachineName}"
@layout EmptyLayout
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject IGenericService<Site> serviceSite
@inject IGenericService<User> serviceUser
@inject IGenericService<Device> serviceDevice
@inject IGenericService<Receipt> serviceReceipt

@inject IGenericService<Division> serviceDivision
@using Berlin.Infrastructure
@using System.Text.Json
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@if(isUserSelected== false)
{
<PageTitle>Selectare Utilizator</PageTitle>
<div class="align-content-center p-5">
    <div class="container-fluid vh-100">
        <div class="row justify-content-between">
            <div class="col-auto">
                <h1 class="fs-5">Selectare utilizator curent</h1>
            </div>
            <div class="col-auto">
                @if (site != null)
                {
                    <button class="btn btn-primary" @onclick="()=>LoadRecipts(site.Id)">Încarcă un deviz existent</button>
                }
                @if (SelectedReceipt != null)
                {
                    <p>Devizul "@SelectedReceipt.Title" este selectat!</p>
                }
            </div>
        </div>



        <hr />
        <div class="row mb-2 " style="margin:2vh;">
            @if (users == null)
            {
                <p>Se incarca ...</p>
            }
            else
                @foreach (var usr in users)
                {
                    <div class="col-md-2 d-block align-items-center justify-content-center text-center ">
                        @if (usr != null)
                        {
                            var imgUrl = string.IsNullOrEmpty(usr.ImageUrl) ? "https://github.com/mdo.png" : usr.ImageUrl;

                            <img src="@imgUrl" alt="mdo" width="150" height="150" class="rounded-circle p-2" @onclick="()=>SelectUser(usr)" style="cursor: pointer;">

                            <p>
                                <div class="strong" style="m-0 p-0">@usr.Title</div>
                                <br />
                                <small>@usr.Description</small>
                            </p>


                        }
                    </div>
                }
        </div>
    </div>
    @if (showModal)
    {
        <div class="modal-backdrop align-content-center p-5">
            <div class="modal-content rounded-4">
                <div class="modal-header border-bottom-0">
                    <h1 class="modal-title fs-5">Selectare deviz</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" @onclick="()=>showModal=false" aria-label="Close"></button>
                </div>
                <div class="modal-footer d-block">
                    <div class="row overflow-auto p-1">
                        @if (Receipts != null)
                        {
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Nume</th>
                                        <th>Creat</th>
                                        <th>Updatat</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int i = 0;
                                        float total = 0;
                                    }
                                    @foreach (var item in Receipts)
                                    {
                                        i++;
                                        <tr>
                                            <th>@i</th>
                                            <th>@item.Title</th>
                                            <th>@item.CreateDate</th>
                                            @{
                                                var timeDifference = DateTime.Now - item.UpdateDate;
                                                var updateText = $"acum ";
                                                if (timeDifference.Hours > 0)
                                                    updateText += $"{timeDifference.Hours} ore si ";
                                                updateText += $"{timeDifference.Minutes} minute";

                                            }
                                            <th>@updateText</th>
                                            <th><button class="btn btn-info" @onclick="()=>LoadDeviz(item,MachineName)">Încarcă</button></th>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                        }

                    </div>

                </div>
            </div>
        </div>
    }
    </div>
}
else
{
    <PageTitle>Selectare Divizie</PageTitle>
    <div class="align-content-center p-5">
        <h1 class="fs-5">Selectare diviziei curente</h1>
        <hr />
        <div class="row mb-2" style="margin:2vh;">
            @if (divisions is null)
            {
                <p>Se încarcă...</p>
            }
            else
            {
                int i = 1;
                @foreach (var item in divisions)
                {
                    i++;
                    <div class="col-md-2 d-block align-items-center justify-content-center text-center">
                        @if (item != null)
                        {
                            <div>
                                <img id="@i" src="Servicii.jpg" alt="mdo" width="150" height="150" class="rounded-circle p-2" @onclick="() => Select(item)">
                                <div class="strong">@item.Title</div>
                                @* <small>@item.Description</small> *@
                            </div>
                        }
                    </div>
                }
            }
        </div>
    </div>
}

@code {
    [Parameter]
    public string MachineName { get; set; }
    private Site? site { get; set; }
    private List<User> users { get; set; } = new List<User>();

    public List<Receipt> Receipts;
    public Receipt SelectedReceipt;
    bool isUserSelected = false;
    private bool showModal = false;

    private List<Division>? divisions { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var devices = await serviceDevice.FindAll(d => d.Title == MachineName);
        var device = devices.FirstOrDefault();
        site = await serviceSite.Find(device.SiteId, s => s.Users, s => s.Divisions);
        if (site == null)
            return;

        foreach (var su in site.Users)
        {
            su.User = await serviceUser.Find(su.UserId);
        }

        users = site.Users.Select(s => s.User).ToList();
    }

    async void SelectUser(User selectedUser)
    {

        Utile.SetSessionData(site, MachineName);
        Utile.SetSessionData(selectedUser, MachineName);
        if (SelectedReceipt != null)
            Utile.SetReceiptData(SelectedReceipt, MachineName);
        else
            Utile.RemoveReceiptData(MachineName);

        isUserSelected = true;
        await SetUpDivizionData();
        StateHasChanged();
    }

    private async Task LoadRecipts(int siteId)
    {
        Receipts = await serviceReceipt.FindAll(r => r.SiteId == siteId && r.PayMethod == 0);
        showModal = true;

        StateHasChanged();
    }

    private async Task LoadDeviz(Receipt receipt, string machinename)
    {

        showModal = false;
        SelectedReceipt = receipt;

        StateHasChanged();
    }

    protected async Task SetUpDivizionData()
    {
        if (site?.Divisions != null)
        {
            divisions = new List<Division>();

            foreach (var su in site.Divisions)
            {
                try
                {
                    if (su.Division == null)
                    {
                        var div = await serviceDivision.Find(su.DivisionId);
                        if (div != null)
                        {
                            su.Division = div;
                        }
                    }

                    divisions.Add(su.Division);
                }
                catch (Exception ex)
                {
                    Console.Error.WriteLine($"Eroare la încărcarea diviziei: {ex.Message}");
                }
            }
        }

    }

    void Select(Division selected)
    {
        Utile.SetSessionData(selected, MachineName);

        NavigationManager.NavigateTo($"/pos/{MachineName}");
    }


}

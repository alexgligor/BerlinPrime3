@page "/siteconfig"
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject IEntitiesManager Manager
@inject IWebHostEnvironment Environment

@using System.IO
@using Berlin.Domain.Entities.Interfaces
@using BerlinUI4.HelpClasses

<h1>Puncte de lucru</h1>
@foreach (var sitenode in SiteNodes)
{
    var toogleId = "toogle" + sitenode.Id;
    var toggleSettings = "toSett" + sitenode.Id;
    var toggleSettings2 = "toSett2" + sitenode.Id;
    var toggleSettings3 = "toSett3" + sitenode.Id;

    <input type="checkbox" id="@toogleId" class="toggle-checkbox" style="display: none;">
    <label for="@toogleId" class="toggle-button"> @sitenode.Title    -   Ultima modificare @sitenode.UpdateDate.ToString()</label>

    <div class="card mb-3  toggle-section">
        <div class="col-md-8">
            <div class="card-body">
                <EditForm Model="@sitenode">
                    <DataAnnotationsValidator />
                    <div class="input-group">
                        <div class="input-group-prepend d-flex p-2">
                            <span class="input-group-text">Nume</span>
                            <InputText class="form-control" @bind-Value="sitenode.Title" />
                        </div>
                        <div class="input-group-prepend d-flex p-2">
                            <span class="input-group-text">Description</span>
                            <InputText class="form-control" @bind-Value="sitenode.Description" />
                        </div>
                        <div class="input-group-prepend d-flex p-2">
                            <span class="input-group-text">
                                Dezactivază
                                <InputCheckbox class="m-1" @bind-Value="sitenode.IsDeleted" />
                            </span>
                        </div>
                       
                    </div>

                    <div class="input-group-prepend d-flex p-2">
                        <span class="input-group-text">
                            Departamente:
                        </span>
                        @foreach (var site in Devisions)
                        {
                            if (sitenode.Divisions.Where(a => a.DivisionId == site.Id).Count() > 0)
                            {
                                <input class="m-2" type="checkbox" checked @onchange="()=>CheckLocation(sitenode, site)">
                            }
                            else
                            {
                                <input class="m-2" type="checkbox" @onchange="()=>CheckLocation( sitenode, site)">
                            }
                            @site.Title
                        }
                    </div>
                </EditForm>

                @if (sitenode.Company != null)
                {
                    <div class="">
                        <br />
                        <input type="checkbox" id="@toggleSettings" class="toggle-checkbox" style="display: none;">
                        <label for="@toggleSettings" class="toggle-button">Datele firmei</label>
                        <div class="card mb-3  toggle-section" style="max-width: auto;">
                            <EditForm Model="@sitenode.Company">
                                <div class="input-group mb-3 p-2">
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">Nume</span>
                                        <InputText class="form-control" @bind-Value="sitenode.Company.Title" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">CUI</span>
                                        <InputText class="form-control" @bind-Value="sitenode.Company.CIF" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">Reg.com</span>
                                        <InputText class="form-control" @bind-Value="sitenode.Company.RegCom" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">Banca</span>
                                        <InputText class="form-control" @bind-Value="sitenode.Company.Bank" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">IBAN</span>
                                        <InputText class="form-control" @bind-Value="sitenode.Company.IBAN" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">Adresa</span>
                                        <InputText class="form-control" @bind-Value="sitenode.Company.Address" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">Capital Social</span>
                                        <InputText class="form-control" @bind-Value="sitenode.Company.SocialCapital" />
                                    </div>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                }
                @if (sitenode.BillDetails != null)
                {
                    <div class="">
                        <br />
                        <input type="checkbox" id="@toggleSettings2" class="toggle-checkbox" style="display: none;">
                        <label for="@toggleSettings2" class="toggle-button">Date de facturare</label>
                        <div class="card mb-3  toggle-section" style="max-width: auto;">
                            <div class="p-3 d-flex">
                                @{
                                    var imgUrl = string.IsNullOrEmpty(sitenode.BillDetails.LogoURL) ? "https://github.com/mdo.png" : sitenode.BillDetails.LogoURL;
                                    var bkUrl = string.IsNullOrEmpty(sitenode.BillDetails.BackgroundURL) ? "https://github.com/mdo.png" : sitenode.BillDetails.BackgroundURL;
                                }

                                <span class="input-group-text">
                                    Incarcă
                                </span>
                                <div class="input-group-prepend d-flex">
                                    <span class="input-group-text">
                                        <img src="@imgUrl" class="card-img" style="width: 30px; height: 30px;">
                                        <label class="btn btn-link">
                                            logo
                                            <InputFile OnChange="e => LoadLogoFiles(e, sitenode)" multiple style="display:none;" />
                                        </label>
                                    </span>
                                </div>
                                <div class="input-group-prepend d-flex">
                                    <span class="input-group-text">
                                        <img src="@bkUrl" class="card-img" style="width: 30px; height: 30px;">
                                        <label class="btn btn-link">
                                            fundal
                                            <InputFile OnChange="e => LoadBackgroundFiles(e, sitenode)" multiple style="display:none;" />
                                        </label>
                                    </span>
                                </div>
                            </div>
                            <EditForm Model="@sitenode.BillDetails">
                                <div class="input-group mb-3 p-2">
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">QR Code link #</span>
                                        <InputText class="form-control" @bind-Value="sitenode.BillDetails.QRCodeLink" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">Zile Scadente</span>
                                        <InputNumber class="form-control" @bind-Value="sitenode.BillDetails.PayDays" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">Factură #</span>
                                        <span class="input-group-text">Serie</span>
                                        <InputText class="form-control" @bind-Value="sitenode.BillDetails.InvoiceSerie" />
                                        <span class="input-group-text">Nr</span>
                                        <InputNumber class="form-control" @bind-Value="sitenode.BillDetails.InvoiceNr" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">Disclamer factură:</span>
                                        <InputTextArea class="form-control" @bind-Value="sitenode.BillDetails.InvoiceDisclamer" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">Deviz #</span>
                                        <span class="input-group-text">Serie</span>
                                        <InputText class="form-control" @bind-Value="sitenode.BillDetails.DevizSerie" />
                                        <span class="input-group-text">Nr</span>
                                        <InputNumber class="form-control" @bind-Value="sitenode.BillDetails.DevizNr" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">Disclamer deviz:</span>
                                        <InputTextArea class="form-control" @bind-Value="sitenode.BillDetails.DevizDisclamer" />
                                    </div>
                                    <div class="input-group-prepend d-flex p-2">
                                        <span class="input-group-text">Chitanță #</span>
                                        <span class="input-group-text">Serie</span>
                                        <InputText class="form-control" @bind-Value="sitenode.BillDetails.BillSerie" />
                                        <span class="input-group-text">Nr</span>
                                        <InputNumber class="form-control" @bind-Value="sitenode.BillDetails.BillNr" />
                                    </div>

                                </div>
                            </EditForm>
                        </div>
                    </div>
                }
                <button type="submit" class="btn btn-info" @onclick="()=>HandleValidSubmit(sitenode)">💾 Salvează</button>
                <div style="position: relative; display: inline-block;">
                    <input type="checkbox" id="@toggleSettings3" class="muy-checkbox" style="display: none;">
                    <label for="@toggleSettings3" class="muy-button">Stergere</label>
                    <div class="muy-message">
                        <p>Esti sigur? Se vor sterge si date istorice!</p>
                        <button class="btn btn-danger" @onclick="()=>DeleteSite(sitenode)">Da</button>
                        <label for="muy-checkbox" class="btn btn-secondary">Nu</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<input type="checkbox" id="addSite" class="toggle-checkbox" style="display: none;">
<label for="addSite" class="toggle-button btn-add">Adauga un nou punct de lucru</label>
<div class="card mb-3  toggle-section" style="max-width: auto;">
    <div class="col-md-8">
        <div class="card-body">
            <EditForm Model="@newUserNode">
                <DataAnnotationsValidator />

                <div class="form-group p-2">
                    <label for="title">Nume:</label>
                    <InputText id="title" class="form-control" @bind-Value="newUserNode.Title" />
                    <ValidationMessage For="@(() => newUserNode.Title)" class="text-danger" />
                    <label for="description">Descriere:</label>
                    <InputText id="description" class="form-control" @bind-Value="newUserNode.Description" />
                </div>

                <button type="submit" class="btn btn-info" @onclick="()=>HandleNewSiteSubmit(newUserNode)">💾 Salvează</button>
            </EditForm>
        </div>
    </div>

</div>

@code {
    private List<Site> SiteNodes = new List<Site>();
    private Site newUserNode = new Site();
    private List<Division> Devisions { get; set; } = new();

    private async Task HandleValidSubmit(Site cuser)
    {
        await Manager.UpdateSite(cuser);
        StateHasChanged();
    }

    private async Task DeleteSite(Site cuser)
    {
        await Manager.DeleteSite(cuser);
        SiteNodes.Remove(cuser);
        StateHasChanged();
    }

    private async Task HandleNewSiteSubmit(Site item)
    {
        await Manager.AddSite(item);

        newUserNode = new Site();
        SiteNodes.Add(item);
        StateHasChanged();
    }

    private async Task CheckLocation(Site site, Division div)
    {
        await Manager.AddRemoveDevisionFromSite(site, div);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        SiteNodes = await Manager.GetSites();
        Devisions = await Manager.GetDivisions();
    }
    private async void LoadLogoFiles(InputFileChangeEventArgs e, Site site)
    {
        var file = e.File;
        if (file != null)
        {
            site.BillDetails.LogoURL = await ImageHelper.SaveInvoiceLogoImg(file, Environment.WebRootPath);
            await Manager.UpdateSite(site);
            StateHasChanged();
        }
    }
    private async void LoadBackgroundFiles(InputFileChangeEventArgs e, Site site)
    {
        var file = e.File;
        if (file != null)
        {
            site.BillDetails.BackgroundURL = await ImageHelper.SaveInvoiceBackgroundImg(file, Environment.WebRootPath);
            await Manager.UpdateSite(site);
            StateHasChanged();
        }
    }
}
